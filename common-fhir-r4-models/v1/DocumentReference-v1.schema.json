{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "http://hl7.org/fhir/json-schema/4.0/DocumentReference-v1.schema.json",
  "type": "object",
  "$ref": "#/definitions/DocumentReference",
  "definitions": {
    "DocumentReference": {
      "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
      "allOf": [
        {
          "$ref": "core/resource.schema.json#/definitions/DomainResource"
        }
      ],
      "extends": {
        "$ref": "core/resource.schema.json#/definitions/DomainResource"
      },
      "properties": {
        "resourceType": {
          "description": "This is a DocumentReference resource",
          "type": "string",
          "const": "DocumentReference"
        },
        "masterIdentifier": {
          "description": "Document identifier as assigned by the source of the document. This identifier is specific to this version of the document. This unique identifier may be used elsewhere to identify this version of the document.",
          "$ref": "core/elements.schema.json#/definitions/Identifier"
        },
        "identifier": {
          "description": "Other identifiers associated with the document, including version independent identifiers.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of this document reference.",
          "enum": [
            "current",
            "superseded",
            "entered-in-error"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "docStatus": {
          "description": "The status of the underlying document.",
          "$ref": "core/primitives.schema.json#/definitions/code"
        },
        "_docStatus": {
          "description": "Extensions for docStatus",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "type": {
          "description": "Specifies the particular kind of document referenced  (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "category": {
          "description": "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "subject": {
          "description": "Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure).",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "date": {
          "description": "When the document reference was created.",
          "$ref": "core/primitives.schema.json#/definitions/instant"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "author": {
          "description": "Identifies who is responsible for adding the information to the document.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "authenticator": {
          "description": "Which person or organization authenticates that this document is valid.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "custodian": {
          "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the document.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "relatesTo": {
          "description": "Relationships that this document has with other document references that already exist.",
          "items": {
            "$ref": "#/definitions/DocumentReference_RelatesTo"
          },
          "type": "array"
        },
        "description": {
          "description": "Human-readable description of the source document.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "securityLabel": {
          "description": "A set of Security-Tag codes specifying the level of privacy/security of the Document. Note that DocumentReference.meta.security contains the security labels of the \"reference\" to the document, while DocumentReference.securityLabel contains a snapshot of the security labels on the document the reference refers to.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "content": {
          "description": "The document and format referenced. There may be multiple content element repetitions, each with a different format.",
          "items": {
            "$ref": "#/definitions/DocumentReference_Content"
          },
          "type": "array"
        },
        "context": {
          "description": "The clinical context in which the document was prepared.",
          "$ref": "#/definitions/DocumentReference_Context"
        }
      },
      "unevaluatedProperties": false,
      "required": [
        "content",
        "resourceType"
      ]
    },
    "DocumentReference_RelatesTo": {
      "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "The type of relationship that this document has with anther document.",
          "enum": [
            "replaces",
            "transforms",
            "signs",
            "appends"
          ]
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "target": {
          "description": "The target document of this relationship.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        }
      },
      "additionalProperties": false,
      "required": [
        "target"
      ]
    },
    "DocumentReference_Content": {
      "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "attachment": {
          "description": "The document or URL of the document along with critical metadata to prove content has integrity.",
          "$ref": "core/elements.schema.json#/definitions/Attachment"
        },
        "format": {
          "description": "An identifier of the document encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType.",
          "$ref": "core/elements.schema.json#/definitions/Coding"
        }
      },
      "additionalProperties": false,
      "required": [
        "attachment"
      ]
    },
    "DocumentReference_Context": {
      "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "encounter": {
          "description": "Describes the clinical encounter or type of care that the document content is associated with.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "event": {
          "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type Code, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "period": {
          "description": "The time period over which the service that is described by the document was provided.",
          "$ref": "core/elements.schema.json#/definitions/Period"
        },
        "facilityType": {
          "description": "The kind of facility where the patient was seen.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "practiceSetting": {
          "description": "This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "sourcePatientInfo": {
          "description": "The Patient Information as known when the document was published. May be a reference to a version specific, or contained.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "related": {
          "description": "Related identifiers or resources associated with the DocumentReference.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    }
  }
}
