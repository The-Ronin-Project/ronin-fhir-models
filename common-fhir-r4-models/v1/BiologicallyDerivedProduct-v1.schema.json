{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "http://hl7.org/fhir/json-schema/4.0/BiologicallyDerivedProduct-v1.schema.json",
  "type": "object",
  "$ref": "#/definitions/BiologicallyDerivedProduct",
  "definitions": {
    "BiologicallyDerivedProduct": {
      "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "allOf": [
        {
          "$ref": "core/resource.schema.json#/definitions/DomainResource"
        }
      ],
      "extends": {
        "$ref": "core/resource.schema.json#/definitions/DomainResource"
      },
      "properties": {
        "resourceType": {
          "description": "This is a BiologicallyDerivedProduct resource",
          "type": "string",
          "const": "BiologicallyDerivedProduct"
        },
        "identifier": {
          "description": "This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Identifier"
          },
          "type": "array"
        },
        "productCategory": {
          "description": "Broad category of this product.",
          "enum": [
            "organ",
            "tissue",
            "fluid",
            "cells",
            "biologicalAgent"
          ]
        },
        "_productCategory": {
          "description": "Extensions for productCategory",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "productCode": {
          "description": "A code that identifies the kind of this biologically derived product (SNOMED Ctcode).",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "status": {
          "description": "Whether the product is currently available.",
          "enum": [
            "available",
            "unavailable"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "request": {
          "description": "Procedure request to obtain this biologically derived product.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Number of discrete units within this product.",
          "$ref": "core/primitives.schema.json#/definitions/integer"
        },
        "_quantity": {
          "description": "Extensions for quantity",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "parent": {
          "description": "Parent product (if any).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "collection": {
          "description": "How this product was collected.",
          "$ref": "#/definitions/BiologicallyDerivedProduct_Collection"
        },
        "processing": {
          "description": "Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells.",
          "items": {
            "$ref": "#/definitions/BiologicallyDerivedProduct_Processing"
          },
          "type": "array"
        },
        "manipulation": {
          "description": "Any manipulation of product post-collection that is intended to alter the product.  For example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make it more suitable for infusion.",
          "$ref": "#/definitions/BiologicallyDerivedProduct_Manipulation"
        },
        "storage": {
          "description": "Product storage.",
          "items": {
            "$ref": "#/definitions/BiologicallyDerivedProduct_Storage"
          },
          "type": "array"
        }
      },
      "unevaluatedProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "BiologicallyDerivedProduct_Collection": {
      "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "collector": {
          "description": "Healthcare professional who is performing the collection.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "source": {
          "description": "The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "collectedDateTime": {
          "description": "Time of product collection.",
          "$ref": "core/primitives.schema.json#/definitions/dateTime"
        },
        "_collectedDateTime": {
          "description": "Extensions for collectedDateTime",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "collectedPeriod": {
          "description": "Time of product collection.",
          "$ref": "core/elements.schema.json#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "BiologicallyDerivedProduct_Processing": {
      "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of of processing.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "procedure": {
          "description": "Procesing code.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "additive": {
          "description": "Substance added during processing.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "timeDateTime": {
          "description": "Time of processing.",
          "$ref": "core/primitives.schema.json#/definitions/dateTime"
        },
        "_timeDateTime": {
          "description": "Extensions for timeDateTime",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "timePeriod": {
          "description": "Time of processing.",
          "$ref": "core/elements.schema.json#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "BiologicallyDerivedProduct_Manipulation": {
      "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of manipulation.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "timeDateTime": {
          "description": "Time of manipulation.",
          "$ref": "core/primitives.schema.json#/definitions/dateTime"
        },
        "_timeDateTime": {
          "description": "Extensions for timeDateTime",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "timePeriod": {
          "description": "Time of manipulation.",
          "$ref": "core/elements.schema.json#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "BiologicallyDerivedProduct_Storage": {
      "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of storage.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "temperature": {
          "description": "Storage temperature.",
          "$ref": "core/primitives.schema.json#/definitions/decimal"
        },
        "_temperature": {
          "description": "Extensions for temperature",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "scale": {
          "description": "Temperature scale used.",
          "enum": [
            "farenheit",
            "celsius",
            "kelvin"
          ]
        },
        "_scale": {
          "description": "Extensions for scale",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "duration": {
          "description": "Storage timeperiod.",
          "$ref": "core/elements.schema.json#/definitions/Period"
        }
      },
      "additionalProperties": false
    }
  }
}
