{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "http://hl7.org/fhir/json-schema/4.0/DeviceRequest-v1.schema.json",
  "type": "object",
  "$ref": "#/definitions/DeviceRequest",
  "definitions": {
    "DeviceRequest": {
      "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.",
      "allOf": [
        {
          "$ref": "core/resource.schema.json#/definitions/DomainResource"
        }
      ],
      "extends": {
        "$ref": "core/resource.schema.json#/definitions/DomainResource"
      },
      "properties": {
        "resourceType": {
          "description": "This is a DeviceRequest resource",
          "type": "string",
          "const": "DeviceRequest"
        },
        "identifier": {
          "description": "Identifiers assigned to this order by the orderer or by the receiver.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Identifier"
          },
          "type": "array"
        },
        "instantiatesCanonical": {
          "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
          "items": {
            "$ref": "core/primitives.schema.json#/definitions/canonical"
          },
          "type": "array"
        },
        "instantiatesUri": {
          "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
          "items": {
            "$ref": "core/primitives.schema.json#/definitions/uri"
          },
          "type": "array"
        },
        "_instantiatesUri": {
          "description": "Extensions for instantiatesUri",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Element"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "Plan/proposal/order fulfilled by this request.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "priorRequest": {
          "description": "The request takes the place of the referenced completed or terminated request(s).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "groupIdentifier": {
          "description": "Composite request this is part of.",
          "$ref": "core/elements.schema.json#/definitions/Identifier"
        },
        "status": {
          "description": "The status of the request.",
          "$ref": "core/primitives.schema.json#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "intent": {
          "description": "Whether the request is a proposal, plan, an original order or a reflex order.",
          "$ref": "core/primitives.schema.json#/definitions/code"
        },
        "_intent": {
          "description": "Extensions for intent",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "priority": {
          "description": "Indicates how quickly the {{title}} should be addressed with respect to other requests.",
          "$ref": "core/primitives.schema.json#/definitions/code"
        },
        "_priority": {
          "description": "Extensions for priority",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "codeReference": {
          "description": "The details of the device to be used.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "codeCodeableConcept": {
          "description": "The details of the device to be used.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "parameter": {
          "description": "Specific parameters for the ordered item.  For example, the prism value for lenses.",
          "items": {
            "$ref": "#/definitions/DeviceRequest_Parameter"
          },
          "type": "array"
        },
        "subject": {
          "description": "The patient who will use the device.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "encounter": {
          "description": "An encounter that provides additional context in which this request is made.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "occurrenceDateTime": {
          "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$",
          "type": "string"
        },
        "_occurrenceDateTime": {
          "description": "Extensions for occurrenceDateTime",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "occurrencePeriod": {
          "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
          "$ref": "core/elements.schema.json#/definitions/Period"
        },
        "occurrenceTiming": {
          "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
          "$ref": "core/elements.schema.json#/definitions/Timing"
        },
        "authoredOn": {
          "description": "When the request transitioned to being actionable.",
          "$ref": "core/primitives.schema.json#/definitions/dateTime"
        },
        "_authoredOn": {
          "description": "Extensions for authoredOn",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "requester": {
          "description": "The individual who initiated the request and has responsibility for its activation.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "performerType": {
          "description": "Desired type of performer for doing the diagnostic testing.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "performer": {
          "description": "The desired performer for doing the diagnostic testing.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "reasonCode": {
          "description": "Reason or justification for the use of this device.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "reasonReference": {
          "description": "Reason or justification for the use of this device.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "insurance": {
          "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "supportingInfo": {
          "description": "Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject\u0027s body the device will be used (i.e. the target site).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "note": {
          "description": "Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Annotation"
          },
          "type": "array"
        },
        "relevantHistory": {
          "description": "Key events in the history of the request.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "unevaluatedProperties": false,
      "required": [
        "subject",
        "resourceType"
      ]
    },
    "DeviceRequest_Parameter": {
      "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "A code or string that identifies the device detail being asserted.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "valueCodeableConcept": {
          "description": "The value of the device detail.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The value of the device detail.",
          "$ref": "core/elements.schema.json#/definitions/Quantity"
        },
        "valueRange": {
          "description": "The value of the device detail.",
          "$ref": "core/elements.schema.json#/definitions/Range"
        },
        "valueBoolean": {
          "description": "The value of the device detail.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "core/elements.schema.json#/definitions/Element"
        }
      },
      "additionalProperties": false
    }
  }
}
