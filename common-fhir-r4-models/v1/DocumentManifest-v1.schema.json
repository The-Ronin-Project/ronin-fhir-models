{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "http://hl7.org/fhir/json-schema/4.0/DocumentManifest-v1.schema.json",
  "type": "object",
  "$ref": "#/definitions/DocumentManifest",
  "definitions": {
    "DocumentManifest": {
      "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.",
      "allOf": [
        {
          "$ref": "core/resource.schema.json#/definitions/DomainResource"
        }
      ],
      "extends": {
        "$ref": "core/resource.schema.json#/definitions/DomainResource"
      },
      "properties": {
        "resourceType": {
          "description": "This is a DocumentManifest resource",
          "type": "string",
          "const": "DocumentManifest"
        },
        "masterIdentifier": {
          "description": "A single identifier that uniquely identifies this manifest. Principally used to refer to the manifest in non-FHIR contexts.",
          "$ref": "core/elements.schema.json#/definitions/Identifier"
        },
        "identifier": {
          "description": "Other identifiers associated with the document manifest, including version independent  identifiers.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Identifier"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of this document manifest.",
          "enum": [
            "current",
            "superseded",
            "entered-in-error"
          ]
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "type": {
          "description": "The code specifying the type of clinical activity that resulted in placing the associated content into the DocumentManifest.",
          "$ref": "core/elements.schema.json#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Who or what the set of documents is about. The documents can be about a person, (patient or healthcare practitioner), a device (i.e. machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure). If the documents cross more than one subject, then more than one subject is allowed here (unusual use case).",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        },
        "created": {
          "description": "When the document manifest was created for submission to the server (not necessarily the same thing as the actual resource last modified time, since it may be modified, replicated, etc.).",
          "$ref": "core/primitives.schema.json#/definitions/dateTime"
        },
        "_created": {
          "description": "Extensions for created",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "author": {
          "description": "Identifies who is the author of the manifest. Manifest author is not necessarly the author of the references included.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "recipient": {
          "description": "A patient, practitioner, or organization for which this set of documents is intended.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "source": {
          "description": "Identifies the source system, application, or software that produced the document manifest.",
          "$ref": "core/primitives.schema.json#/definitions/uri"
        },
        "_source": {
          "description": "Extensions for source",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "description": {
          "description": "Human-readable description of the source document. This is sometimes known as the \"title\".",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "core/elements.schema.json#/definitions/Element"
        },
        "content": {
          "description": "The list of Resources that consist of the parts of this manifest.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "related": {
          "description": "Related identifiers or resources associated with the DocumentManifest.",
          "items": {
            "$ref": "#/definitions/DocumentManifest_Related"
          },
          "type": "array"
        }
      },
      "unevaluatedProperties": false,
      "required": [
        "content",
        "resourceType"
      ]
    },
    "DocumentManifest_Related": {
      "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "core/primitives.schema.json#/definitions/string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "core/elements.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Related identifier to this DocumentManifest.  For example, Order numbers, accession numbers, XDW workflow numbers.",
          "$ref": "core/elements.schema.json#/definitions/Identifier"
        },
        "ref": {
          "description": "Related Resource to this DocumentManifest. For example, Order, ServiceRequest,  Procedure, EligibilityRequest, etc.",
          "$ref": "core/elements.schema.json#/definitions/Reference"
        }
      },
      "additionalProperties": false
    }
  }
}
