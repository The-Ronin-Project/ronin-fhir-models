name: Create Release
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release'
        type: string
        required: true
        default: 'main'
      increment:
        description: 'Type of version increment to perform'
        type: choice
        required: true
        options:
          - Patch
          - Minor
          - Major
      skip_publish:
        description: 'Skip publishing (use if changelog failed)'
        type: boolean
        required: false
        default: false

env:
  ronin.release: true

jobs:
  tag:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Execute build
        if: ${{ github.event.inputs.skip_publish == 'false' }}
        run: ./gradlew build

      - name: Test events
        if: ${{ github.event.inputs.skip_publish == 'false' }}
        run: ./gradlew testEvents

      - name: Axion Release
        id: release
        if: ${{ github.event.inputs.skip_publish == 'false' }}
        run: |
          ./gradlew release \
             -Prelease.versionIncrementer=increment${{ github.event.inputs.increment }} \
             -Prelease.customUsername=${{ github.actor }} \
             -Prelease.customPassword=${{ github.token }}

      - name: Get version.
        id: get-version
        run: |
          VERSION=$(./gradlew currentVersion | awk '{ if(/Project version:/) { print $3; exit } }' | cut -d\- -f1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

    outputs:
      tag: ${{ steps.get-version.outputs.version }}

  release:
    runs-on: self-hosted
    needs: tag
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: "refs/tags/${{ needs.tag.outputs.tag }}"

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Publish
        if: ${{ github.event.inputs.skip_publish == 'false' }}
        run: ./gradlew publish
        env:
          NEXUS_USER: ${{ secrets.NEXUS_MAVEN_USER }}
          NEXUS_TOKEN: ${{ secrets.NEXUS_MAVEN_TOKEN }}

      - name: Generate Changelog
        id: changelog
        uses: gandarez/changelog-action@v1.2.0

      - name: Generate Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.tag.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          artifacts: "**/build/libs/*.jar"

  publish-schema:
    runs-on: self-hosted
    needs: tag
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: "refs/tags/${{ needs.tag.outputs.tag }}"
      - id: publish_artifact
        run: |-
          set -x
          shopt -s extglob
          cd common-fhir-r4-models
          mkdir -p ${PWD}/build/
          SCHEMA="common-fhir-r4-models"
          VERSIONS="$(ls -d v*([0-9]))"
          echo "Versions = ${VERSIONS}"
          for v in ${VERSIONS}; do
            ARTIFACT_BASE="${SCHEMA}-${v}-${{ needs.tag.outputs.tag }}"
            ARTIFACT="${ARTIFACT_BASE}.tar.gz"
            ( cd ${v} && echo "${ARTIFACT_BASE}" >> version && tar cvzf ../build/${ARTIFACT} . )
            curl -v --user '${{ secrets.NEXUS_RAW_USER }}:${{ secrets.NEXUS_RAW_TOKEN }}' \
              --upload-file $PWD/build/${ARTIFACT} \
              "https://repo.devops.projectronin.io/repository/ronin-raw/contract-event/${SCHEMA}/${ARTIFACT}"
          done
